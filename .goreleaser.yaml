# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - id: apiserver
    binary: apiserver
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      # - windows
      - darwin
    main: ./cmd/apiserver
  - id: opampctl
    binary: opampctl
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      # - windows
      - darwin
    main: ./cmd/opampctl

dockers:
  - image_templates:
      - "harbor.minuk.dev/opampcommander/apiserver:{{ .Tag }}-amd64"
      - "harbor.minuk.dev/opampcommander/apiserver:{{ .Major }}-amd64"
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
    dockerfile: build/docker/apiserver/Dockerfile
  - image_templates:
      - "harbor.minuk.dev/opampcommander/apiserver:{{ .Tag }}-arm64"
      - "harbor.minuk.dev/opampcommander/apiserver:{{ .Major }}-arm64"
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64"
    dockerfile: build/docker/apiserver/Dockerfile
docker_manifests:
  - name_template: "harbor.minuk.dev/opampcommander/apiserver:{{ .Tag }}"
    image_templates:
      - "harbor.minuk.dev/opampcommander/apiserver:{{ .Tag }}-amd64"
      - "harbor.minuk.dev/opampcommander/apiserver:{{ .Tag }}-arm64"

release:
  github:
    owner: minuk-dev
    name: opampcommander
  ids:
    - apiserver
    - opampctl
  draft: true
  replace_existing_draft: true
  skip_upload: false

artifactories:
  - name: github
    ids:
      - apiserver
      - opampctl
    checksum: true

archives:
  - formats:
    - tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    # format_overrides:
    #  - goos: windows
    #    format: zip

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
