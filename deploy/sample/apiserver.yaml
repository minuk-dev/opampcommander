---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apiserver
  namespace: opampcommander
  labels:
    app: apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apiserver
  template:
    metadata:
      labels:
        app: apiserver
    spec:
      containers:
      - name: apiserver
        image: minukdev/opampcommander:0.1.0
        command:
        - /apiserver
        - --config=/etc/opampcommander/config.yaml
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        ports:
        - containerPort: 8080
          name: http
        volumeMounts:
        - name: config-volume
          mountPath: /etc/opampcommander
          readOnly: true
        env:
        - name: AUTH_ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: apiserver-secrets
              key: adminUsername
        - name: AUTH_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: apiserver-secrets
              key: adminPassword
        - name: AUTH_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: apiserver-secrets
              key: jwtSecret
        - name: AUTH_OAUTH2_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: apiserver-secrets
              key: oauth2ClientId
        - name: AUTH_OAUTH2_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: apiserver-secrets
              key: oauth2ClientSecret
        - name: AUTH_OAUTH2_STATE_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: apiserver-secrets
              key: oauth2StateJwtSecret
      volumes:
      - name: config-volume
        configMap:
          name: apiserver-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: apiserver-config
  namespace: opampcommander
data:
  config.yaml: |
    address: localhost:8080
    database:
      type: "mongodb"
      endpoints:
      - "mongodb://mongodb.opampcommander.svc.cluster.local:27017"
    metric:
      enabled: true
      type: prometheus
      endpoint: http://localhost:9090/metrics
    log:
      level: "info"
      format: "json"
    auth:
      enabled: true
      admin:
        username: # use environment variable. Please see secret
        password: # use environment variable. Please see secret
      jwt:
        issuer: "opampcommander"
        expire: 5m
        secret: # use environment variable. Please see secret
        audience:
        - "opampcommander"
      type: "oauth2"
      oauth2:
        provider: github
        clientId: # use environment variable. Please see secret
        clientSecret: # use environment variable. Please see secret
        redirectUri: "https://opampcommander-apiserver.minuk.dev/api/v1/auth/callback"
        state: # to prevent CSRF attacks
          mode: jwt
          jwt:
            issuer: "opampcommander"
            expire: 5m
            secret: # use environment variable. Please see secret
            audience:
            - "opampcommander"
---
apiVersion: v1
kind: Secret
metadata:
  name: apiserver-secrets
  namespace: opampcommander
type: Opaque
data:
  adminUsername: admin
  adminPassword: admin
  jwtSecret: jwtsecret
  oauth2ClientId: your_client_id
  oauth2ClientSecret: your_client_secret
  oauth2StateJwtSecret: state_jwt_secret
---
apiVersion: v1
kind: Service
metadata:
  name: apiserver
  namespace: opampcommander
  labels:
    app: apiserver
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: apiserver
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: apiserver-ingress
  namespace: opampcommander
spec:
  rules:
  - host: apiserver.opampcommander.local
    http:
      paths:
