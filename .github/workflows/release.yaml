name: Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

permissions:
  deployments: write
  packages: write
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.25
      - name: Set flags based on ref type
        run: |
          if [[ "${{ github.ref }}" != refs/tags/v* ]]; then
            echo "flags=--snapshot" >> $GITHUB_ENV
          fi
      # More assembly might be required: Docker logins, GPG, etc.
      # It all depends on your needs.
      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean ${{ env.flags }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release Assets
        uses: actions/upload-artifact@v4
        with:
          name: goreleaser-assets
          path: |
            dist/*
      - name: Find Docker images from GoReleaser's output
        if: startsWith(github.ref, 'refs/heads/')
        run: |
          jq -r '.[] | select(.type == "Docker Image") | .path' dist/artifacts.json > image_list.txt
          cat image_list.txt
          while IFS= read -r image; do
            echo "Pushing $image"
            docker push "$image"
          done < image_list.txt
